# Nombre del Servicio que usara Eureka
spring.application.name = servicio-items

server.port = 8002

# Esta configuracion funciona para: @LoadBalanced del RestTemplate y @RibbonClient(name = "servicio-productos")
# Esta configuracion no es necesario cuando se habilita eureka.client.service-url.defaultZone 
# Corremos 2 o mas Instancias del proyecto servicio-producto en esos puertos u otros
servicio-productos.ribbon.listOfServers=localhost:8001,localhost:9001

# Si Eureka Server esta en la misma maquina de los servicios se puede obviar esta configuracion 
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Linea 9 y 12 se pueden comentar solo bastaria con eureka-client en el pom.xml ya que cumplen con las condiciones de arribas para ser comentadas.

# Configurando TimeOut en Hystrix y Ribbon (Hystrix envuelve a Ribbon) aumentandolo a 13 Seg
# Por defecto Ribbon con Feign y Hystrix tienen un tiempo de respuesta de 1 Segundo = 1000 MiliSeg
# hystrix...timeoutInMilliseconds es la suma ribbon.ConnectTimeout + ribbon.ReadTimeout = 13000 
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 13000
ribbon.ConnectTimeout: 3000
ribbon.ReadTimeout: 10000

###################################################################
# Configuracion Zipkin
###################################################################
# Por defecto la probabilidad en que se envian las trazas es de 10% es decir el 0.1 de las trazas de los request se exportan a Zipkin,
# lo cambiamos al 100% es decir 1.0
spring.sleuth.sampler.probability=1.0

# Configurando la ruta de Zipkin [OPCIONAL ya que por defecto ira al http://127.0.0.1:9411]
spring.zipkin.base-url=http://127.0.0.1:9411
###################################################################
